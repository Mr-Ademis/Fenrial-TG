import telebot
from telebot import types

from random import randint, choice
from datetime import datetime, timedelta
import time
import os
import re
import time
import threading

from PIL import Image, ImageFont, ImageDraw

import engine
import tok
import non_combat
from text import text
from sql import bd

bd = bd.Database()


bot = telebot.TeleBot(tok.tok)

### –°–ª–æ–≤–∞—Ä–∏
clas = {0: "–ë–µ–∑ –∫–ª–∞—Å—Å–∞", 1: "–í–æ–∏–Ω", 2: "–ê—Å—Å–∞—Å–∏–Ω", 3: "–ú–∞–≥"}
bag = {0: 14, 1: 21}

__QUERY_BATTLE_ADD_ = (
    "INSERT INTO battle VALUES("
    "default, %(vkid)s, default, 1, %(nhp)s, %(hp)s, %(mp)s, default, "
    " %(name_mob)s, %(vid_mob)s, %(lvl_mob)s, %(attack_mob)s, %(physical_protection_mob)s,"
    "%(magical_protection_mob)s, %(nhp_mob)s, %(hp_mob)s, default,"
    " default, default, default, default, default, default, default, default, default, %(def_player)s, %(evasion)s, %(attack_player)s, %(intellect)s)"
)


__QUERY_DELETE_BATTLE = "DELETE FROM battle WHERE vkid = %(vkid)s"

user = {}


def user_battle(uid):
    """–í—ã–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –±–æ–π –∏–∑ –ë–î –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞"""
    for item in bd.battle(uid):
        user = {
            "nhp": item["nhp"],
            "status": item["status"],
            "hp": item["hp"],
            "mp": item["mp"],
            "cooldown_potion": item["cooldown_potion"],
            "name_mob": item["name_mob"],
            "vid_mob": item["vid_mob"],
            "lvl_mob": item["lvl_mob"],
            "attack_mob": item["attack_mob"],
            "physical_protection_mob": item["physical_protection_mob"],
            "magical_protection_mob": item["magical_protection_mob"],
            "nhp_mob": item["nhp_mob"],
            "hp_mob": item["hp_mob"],
            "def_player": item["def_player"],
            "evasion": item["evasion"],
            "attack_player": item["attack_player"],
            "intellect": item["intellect"],
            "status_skill_10": item["status_skill_10"],
            "status_skill_1": item["status_skill_1"],
            "status_skill_2": item["status_skill_2"],
            "status_skill_3": item["status_skill_3"],
            "status_skill_4": item["status_skill_4"],
            "status_skill_5": item["status_skill_5"],
            "status_skill_6": item["status_skill_6"],
        }
        return user

def nhp_update(uid, nhp):
    """–û–±–Ω–æ–≤–ª—è–µ–º —Ö–ø –∏–≥—Ä–æ–∫–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ"""
    bd.exec(f"UPDATE battle SET nhp = {nhp} where vkid = {uid}", None)
    engine.unloading_players()


def nmp_update(uid, nmp):
    """–û–±–Ω–æ–≤–ª—è–µ–º –º–ø –∏–≥—Ä–æ–∫–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ"""
    bd.exec(f"UPDATE battle SET mp = {nmp} where vkid = {uid}", None)
    engine.unloading_players()


def hp_mp_update(uid, nhp, nmp):
    """–û–±–Ω–æ–≤–ª—è–µ–º —Ö–ø, –º–ø –∏–≥—Ä–æ–∫–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ"""
    bd.exec(f"UPDATE players SET nhp = {nhp}, nmp = {nmp} where vkid = {uid}", None)
    engine.unloading_players()


def image_combat(
    uid, substrate, player, user, spell_player, spell_mob, course_of_battle
):
    im = Image.open(substrate)
    pointsize = 32
    font = "Fenrial_TG/days2.ttf"
    draw = ImageDraw.Draw(im)
    font = ImageFont.truetype(font, pointsize)

    portr = Image.open(f"Fenrial_TG/moobs/f_{player['clas']}.jpg")
    im.paste(portr, (0, 0))

    ### –ë–∞—Ä—ã —Ö–ø, –º–ø ###
    hp_p_b = str(int((((user["nhp"] * 100) / user["hp"]) // 10) * 10))
    if hp_p_b == "0" and user["nhp"] != 0:
        hp_p_b = "10"

    hp_p = Image.open(f"Fenrial_TG/bar_mp_hp/f_hp_{hp_p_b}.jpg")
    im.paste(hp_p, (205, 40))

    mp_p_b = str(int((user["mp"] // 10) * 10))
    if user["mp"] != 0 and mp_p_b == "0":
        mp_p_b = "10"

    if user["mp"] != 0:
        mp_p = Image.open(f"Fenrial_TG/bar_mp_hp/f_mp_{mp_p_b}.jpg")
        im.paste(mp_p, (205, 95))

    hp_m_b = str((int(((user["nhp_mob"] * 100) / user["hp_mob"]) // 10) * 10))
    if user["nhp_mob"] != 0 and hp_m_b == "0":
        hp_m_b = "10"

    hp_b = Image.open(f"Fenrial_TG/bar_mp_hp/f_mob_{hp_m_b}.jpg")
    im.paste(hp_b, (88, 796))

    ### –ù–∞–≤—ã–∫–∏ ###

    player_skil = Image.open(spell_player)
    im.paste(player_skil, (211, 167))
    mob_skil = Image.open(spell_mob)
    im.paste(mob_skil, (85, 642))

    if 0 < user["status_skill_4"] <= 4 and player["clas"] == 2:
        krv_img = Image.open(f"Fenrial_TG/spells/krv.jpg")
        im.paste(krv_img, (225, 715))

    if 0 < user["status_skill_6"] == 1 and player["clas"] == 1:
        krv_img = Image.open(f"Fenrial_TG/spells/IePQ234E7o.jpg")
        im.paste(krv_img, (225, 715))

    if user["status_skill_4"] > 3 and player["clas"] == 1:
        krv_img = Image.open(f"Fenrial_TG/spells/ertqwe.jpg")
        im.paste(krv_img, (300, 715))

    if user["status_skill_5"] > 3 and player["clas"] == 1:
        krv_img = Image.open(f"Fenrial_TG/spells/retwertw.jpg")
        im.paste(krv_img, (360, 160))

    if user["status_skill_1"] != 0 and player["clas"] == 3:
        krv_img = Image.open(f"Fenrial_TG/spells/sh.jpg")
        im.paste(krv_img, (360, 160))

    ### –¢–µ–∫—Å—Ç ###
    regen_hp = ""
    regen_mp = ""

    regen_player_hp = 0
    regen_player_mp = 0

    match player["clas"]:
        case 0:
            regen_player_hp = 1
            regen_player_mp = 1
        case 1:
            regen_player_hp = int(player["stamina"] / 2.5)
            regen_player_mp = int(player["intellect"] / 2.5)
        case 2:
            regen_player_hp = int(player["stamina"] / 2.5)
            regen_player_mp = int(player["intellect"] / 2.5)
        case 3:
            regen_player_hp = int(player["stamina"] / 2.5)
            regen_player_mp = int(player["intellect"] / 2.5)

    if course_of_battle != 0:
        regen_hp = f"(+{regen_player_hp})"
        regen_mp = f"(+{regen_player_mp})"
    hp = f'{user["nhp"]}/{user["hp"]} {regen_hp}'
    hp = f"{(17 - len(hp))*' '}{hp}"
    mp = f'{user["mp"]}/100 {regen_mp}'
    mp = f"{(18 - len(mp))*' '}{mp}"

    name_m = f'{user["name_mob"]}'
    name_m = f"{(18 - len(name_m))*' '}{name_m}"

    hp_m = f'{user["nhp_mob"]}/{user["hp_mob"]}'
    hp_m = f"{(9 - len(hp_m))*' '}{hp_m}"

    if user["cooldown_potion"] == 0:
        potion = ""
    else:
        potion = f'{user["cooldown_potion"]}'

    coordinates = {
        "–∑–µ–ª—å—è —Ö–ø": [120, 200, potion],
        "—Ö–ø": [210, 40, hp],
        "–º–ø": [210, 95, mp],
        "—Ö–ø –º–æ–±–∞": [555, 792, hp_m],
        "–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–±–∞": [445, 752, name_m],
    }

    def draw_text(x_cor: int, y_cor: int, text: str) -> None:
        """–§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞"""
        for i in ((-5, -5), (5, -5), (-5, 5), (5, 5), (0, 0)):
            draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="black")
        draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="white")

    # –ü–µ—Ä–µ–±–µ—Ä–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä–µ–º–µ—Ç—Ä–æ–≤ –∏ –≤—ã–∑–æ–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
    for item in coordinates.values():
        draw_text(item[0], item[1], item[2])

    im.save(f"Fenrial_TG/fights/fights{uid}.jpg")
    return f"Fenrial_TG/fights/fights{uid}.jpg"


class keyboard_download(object):
    def __init__(self):
        """–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        self.bt1_0 = self.bt2_0 = self.bt1_2 = self.bt2_2 = self.bt3_2 = None
        self.bt4_2 = self.bt6 = self.bt7 = self.bt8 = self.bt9 = None
        self.create_keyboard()

    def create_button(self, label: str, callback: str):
        return telebot.types.InlineKeyboardButton(text=label, callback_data=callback)

    def create_keyboard(self):
        self.bt1_0 = self.create_button("üí¢–í—ã–ø (10)", "üí¢–í—ã–ø–∞–¥")
        self.bt2_0 = self.create_button("üí•–û–í (15)", "üí•–û–ø–∞—Å–Ω—ã–π –≤—ã–ø–∞–¥")

        self.bt1_2 = self.create_button("üó°–ö–£ (7)", "üó°–ö–æ–≤–∞—Ä–Ω—ã–π —É–¥–∞—Ä")
        self.bt2_2 = self.create_button("üí•–£–í (12)", "üí•–£–¥–∞—Ä –≤ —Å–ø–∏–Ω—É")
        self.bt3_2 = self.create_button("‚öî–ü—Ç—Ä (12)", "‚öî–ü–æ—Ç—Ä–æ—à–µ–Ω–∏–µ")
        self.bt4_2 = self.create_button("üëÅ–û (12)", "üëÅ–û—Å–ª–µ–ø–ª–µ–Ω–∏–µ")
        self.bt5_2 = self.create_button("üíî–†–∞—Å (7)", "üíî–†–∞—Å—Å–µ—á–µ–Ω–∏–µ")

        self.bt1_3 = self.create_button("üí´–ß–° (7)", "üí´–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–µ —Å—Ç—Ä–µ–ª—ã")
        self.bt2_3 = self.create_button("üíé–ú–© (12)", "üíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç")
        self.bt3_3 = self.create_button("üî•–û–® (17)", "üî•–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä")
        self.bt4_3 = self.create_button("‚ú®–°–∫—á(12)", "‚ú®–°–∫–∞—á–æ–∫")
        self.bt5_3 = self.create_button("‚ùÑ–ö–õ (20)", "‚ùÑ–ö–æ–ª—å—Ü–æ –ª—å–¥–∞")

        self.bt1_1 = self.create_button("‚úäüèª–ú–£(20)", "‚úäüèª–ú–æ—â–Ω—ã–π —É–¥–∞—Ä")
        self.bt2_1 = self.create_button("üî•–£–ì(12)", "üî•–£–¥–∞—Ä –≥–µ—Ä–æ—è")
        self.bt3_1 = self.create_button("üí•–†(12)", "üí•–†–∞—Å–∫–æ–ª –±—Ä–æ–Ω–∏")
        self.bt4_1 = self.create_button("üëπ–î–ö(12)", "üëπ–î–µ–º–æ—Ä–∞–ª–∏–∑—É—é—â–∏–π –∫—Ä–∏–∫")
        self.bt5_1 = self.create_button("‚ô®–ë–ö(12)", "‚ô®–ë–æ–µ–≤–æ–π –∫—Ä–∏–∫")

        self.bt6 = self.create_button("üó°–ê—Ç–∞–∫–∞", "üó°–ê—Ç–∞–∫–∞")
        self.bt7 = self.create_button("üß™", "üß™–ó–µ–ª—å—è")
        self.bt8 = self.create_button("üìñ", "spell_book_battle")
        self.bt9 = self.create_button("üëû", "üëû–°–±–µ–∂–∞—Ç—å –∑–∞–ø—Ä–æ—Å")


keyb = keyboard_download()


def keyboard(player, user, inventor):
    buut = telebot.types.InlineKeyboardMarkup(row_width=3)
    kbb = []
    kba = []
    match player["clas"]:
        case 0:
            if user["mp"] >= 15 and user["status_skill_3"] == 0:
                kbb = kbb + [keyb.bt1_0, keyb.bt2_0]
            elif user["mp"] >= 10:
                kbb.append(keyb.bt1_0)
        case 1:
            if user["mp"] >= 20 and user["status_skill_1"] >= 2:
                kbb.append(keyb.bt1_1)
            if user["mp"] >= 12 and user["status_skill_2"] == 0:
                kbb.append(keyb.bt2_1)
            if user["mp"] >= 12 and user["status_skill_3"] == 0:
                kbb.append(keyb.bt3_1)
            if user["mp"] >= 12 and user["status_skill_4"] == 0:
                kbb.append(keyb.bt4_1)
            if user["mp"] >= 12 and user["status_skill_5"] == 0:
                kbb.append(keyb.bt5_1)
        case 2:
            if user["mp"] >= 7:
                kbb.append(keyb.bt1_2)
            if user["mp"] >= 12 and user["status_skill_1"] == 0 and user["status"] < 2:
                kbb.append(keyb.bt2_2)
            if user["mp"] >= 12 and user["status_skill_2"] >= 2:
                kbb.append(keyb.bt3_2)
            if user["status"] > 1 and user["mp"] >= 12 and user["status_skill_3"] == 0:
                kbb.append(keyb.bt4_2)
            if user["mp"] >= 7 and user["status_skill_4"] == 0:
                kbb.append(keyb.bt5_2)
        case 3:
            if user["mp"] >= 7:
                kbb.append(keyb.bt1_3)
            if user["mp"] >= 12 and user["status_skill_1"] == 0:
                kbb.append(keyb.bt2_3)
            if user["mp"] >= 17 and user["status_skill_2"] == 0:
                kbb.append(keyb.bt3_3)
            if user["status"] > 1 and user["mp"] >= 12 and user["status_skill_3"] == 0:
                kbb.append(keyb.bt4_3)
            if user["mp"] >= 22 and user["status_skill_4"] == 0:
                kbb.append(keyb.bt5_3)

    buut.add(*kbb)
    potion_hp = 0
    potion_mp = 0
    for i in inventor.keys():
        if inventor[i] == 103:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            potion_hp = f"{inventor[item_quantity]}"
            break
    for i in inventor.keys():
        if inventor[i] == 104:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            potion_mp = f"{inventor[item_quantity]}"
            break
    if user["cooldown_potion"] == 0 and (potion_hp != 0 or potion_mp != 0):
        kba.append(keyb.bt7)
    kba = [keyb.bt6] + kba + [keyb.bt8, keyb.bt9]
    buut.add(*kba)
    return buut


@bot.message_handler()
def send(uid, text, markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    if markup:
        bot.send_message(uid, text, reply_markup=markup, parse_mode="html")
    else:
        bot.send_message(uid, text, parse_mode="html")


def photo(uid, text, caption, markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏"""
    if markup:
        bot.send_photo(
            uid, text, caption=caption, reply_markup=markup, parse_mode="html"
        )
    else:
        bot.send_photo(uid, text, caption=caption, parse_mode="html")


def tran_1(uid, player, inventor):
    """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –Ω–∞—á–∞–ª–∞ –±–æ—è"""
    if player["level"] == 1:
        mob = {
            "–∂–∏–≤–æ—Ç–Ω–æ–µ": (
                "t5cc_QEdE5c",
                str(randint(6, 7)),
                str(randint(2, 4)),
                str(randint(1, 4)),
                "1",
                "ü¶á",
                str(randint(65, 70)),
                "–ë–ï–°–•–í–û–°–¢–´–ô –ì–†–´–ó–£–ù",
            ),
            "–æ—Ä–∫": (
                "TfD0aaRQ5fI",
                str(randint(6, 8)),
                str(randint(6, 9)),
                str(randint(2, 7)),
                "1",
                "üßü‚Äç‚ôÇÔ∏è",
                str(randint(70, 80)),
                "–ì–†–£–ë–´–ô –ö–û–°–¢–û–õ–û–ú",
            ),
            "–Ω–µ–∂–∏—Ç—å": (
                "VDTh1K2lQ7E",
                str(randint(6, 7)),
                str(randint(2, 6)),
                str(randint(10, 19)),
                "1",
                "üíÄ",
                str(randint(70, 75)),
                "–†–ê–ó–™–Ø–†–ï–ù–ù–´–ô –ö–£–õ–¨–¢–ò–°–¢",
            ),
        }
    else:
        hpm1 = randint(
            (player["level"] - 1) * 200 * 0.7, (player["level"] - 1) * 200 * 1
        )
        hpm2 = randint(
            (player["level"] - 1) * 200 * 0.7, (player["level"] - 1) * 200 * 1.2
        )
        hpm3 = randint(
            (player["level"] - 1) * 200 * 0.7, (player["level"] - 1) * 200 * 1
        )

        a121 = randint(
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2)),
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2) * 1.2),
        )
        a122 = randint(
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2)),
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2) * 1.4),
        )
        a123 = randint(
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2)),
            round(((player["level"] - 1) * 10 + (player["level"] - 1) * 2) * 1.2),
        )

        mob = {
            "–∂–∏–≤–æ—Ç–Ω–æ–µ": (
                "t5cc_QEdE5c",
                str(a121),
                str(randint(1, 30)),
                str(randint(1, 4)),
                "1",
                "ü¶á",
                str(hpm1),
                "–ë–ï–°–•–í–û–°–¢–´–ô –ì–†–´–ó–£–ù",
            ),
            "–æ—Ä–∫": (
                "TfD0aaRQ5fI",
                str(a122),
                str(randint(1, 30)),
                str(randint(1, 15)),
                "1",
                "üßü‚Äç‚ôÇÔ∏è",
                str(hpm2),
                "–ì–†–£–ë–´–ô –ö–û–°–¢–û–õ–û–ú",
            ),
            "–Ω–µ–∂–∏—Ç—å": (
                "VDTh1K2lQ7E",
                str(a123),
                str(randint(1, 20)),
                str(randint(1, 30)),
                "1",
                "üíÄ",
                str(hpm3),
                "–†–ê–ó–™–Ø–†–ï–ù–ù–´–ô –ö–£–õ–¨–¢–ò–°–¢",
            ),
        }

    vid_mob = choice(["–∂–∏–≤–æ—Ç–Ω–æ–µ", "–æ—Ä–∫", "–Ω–µ–∂–∏—Ç—å"])

    im = Image.open(f"Fenrial_TG/moobs/{mob[vid_mob][0]}.jpg")
    pointsize = 32
    font = "Fenrial_TG/days2.ttf"
    draw = ImageDraw.Draw(im)
    font = ImageFont.truetype(font, pointsize)

    portr = Image.open(f"Fenrial_TG/moobs/f_{player['clas']}.jpg")
    im.paste(portr, (0, 0))

    ### –ë–∞—Ä—ã —Ö–ø, –º–ø ###
    hp_p_b = str(
        int((((int(player["nhp"]) * 100) / (int(player["stamina"]) * 10)) // 10) * 10)
    )

    if hp_p_b != "10" and hp_p_b != "0":
        hp_p = Image.open(f"Fenrial_TG/bar_mp_hp/f_hp_{hp_p_b}.jpg")
        im.paste(hp_p, (195, 43))

    mp_p_b = str(int((int(player["nmp"]) // 10) * 10))
    if int(player["nmp"]) != 0 and mp_p_b == "0":
        mp_p_b = "10"
    if int(player["nmp"]) != 0:
        mp_p = Image.open(f"Fenrial_TG/bar_mp_hp/f_mp_{mp_p_b}.jpg")
        im.paste(mp_p, (195, 101))

    ### –í—Å–µ –Ω–∞–¥–ø–∏—Å–∏ ###

    hp = f"{player['nhp']} / {int(player['stamina'])*10}"
    hp = f"{(17 - len(hp))*' '}{hp}"
    mp = f"{player['nmp']} / 100"
    mp = f"{(18 - len(mp))*' '}{mp}"

    name_m = f"{mob[vid_mob][-1]}"
    name_m = f"{(18 - len(name_m))*' '}{name_m}"

    hp_m = f"{mob[vid_mob][-2]}/{mob[vid_mob][-2]}"
    hp_m = f"{(9 - len(hp_m))*' '}{hp_m}"

    z_hp = "0"
    z_mp = "0"
    for i in inventor.keys():
        if inventor[i] == 103:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            z_hp = f"{inventor[item_quantity]}"
            break
    for i in inventor.keys():
        if inventor[i] == 104:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            z_mp = f"{inventor[item_quantity]}"
            break

    def_player = 0
    evasion = 0

    match player["clas"]:
        case 0:
            def_player = 9
            evasion = 5
        case 1:
            def_player = int(
                (player["defens"] * 60)
                / ((8 * player["level"] + player["stamina"] / 3) * 2)
            )
            evasion = int(int(player["agility"] * 10 / (player["level"] * 3)))
        case 2:
            def_player = int(
                10
                + (player["defens"] * 30)
                / ((8 * player["level"] + player["stamina"] / 3) * 2)
            )
            evasion = int(player["agility"] * 20 / (player["level"] * 4))
        case 3:
            def_player = int(
                5
                + (player["defens"] * 20)
                / ((8 * player["level"] + player["stamina"] / 3) * 2)
            )
            evasion = int(player["agility"] * 5 / (player["level"] * 2))

    coordinates = {
        "–∑–∞—â–∏—Ç–∞ –∏–≥—Ä–æ–∫–∞": [253, 170, f"{def_player} %"],
        "—É–≤–æ—Ä–æ—Ç –∏–≥—Ä–æ–∫–∞": [253, 240, f"{evasion} %"],
        "–∑–µ–ª—å—è —Ö–ø": [400, 170, z_hp],
        "–∑–µ–ª—å—è –º–ø": [400, 240, z_mp],
        "—Ö–ø": [210, 40, hp],
        "–º–ø": [210, 95, mp],
        "–∞—Ç–∞–∫–∞ –º–æ–±–∞": [160, 490, f"{mob[vid_mob][1]}"],
        "—Ñ —Å–æ–ø—Ä –º–æ–±–∞": [160, 570, f"{mob[vid_mob][2]} %"],
        "–º —Å–æ–ø—Ä –º–æ–±–∞": [160, 650, f"{mob[vid_mob][3]} %"],
        "–ª–≤–ª –º–æ–±–∞": [160, 720, f"{mob[vid_mob][4]}"],
        "—Ö–ø –º–æ–±–∞": [555, 792, hp_m],
        "–Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–±–∞": [445, 752, name_m],
    }

    def draw_text(x_cor: int, y_cor: int, text: str) -> None:
        """–§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞"""
        for i in ((-5, -5), (5, -5), (-5, 5), (5, 5), (0, 0)):
            draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="black")
        draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="white")

    # –ü–µ—Ä–µ–±–µ—Ä–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä–µ–º–µ—Ç—Ä–æ–≤ –∏ –≤—ã–∑–æ–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
    for item in coordinates.values():
        draw_text(item[0], item[1], item[2])

    im.save(f"Fenrial_TG/fights/start{uid}.jpg")

    butt = telebot.types.InlineKeyboardMarkup(row_width=2)
    bt1 = telebot.types.InlineKeyboardButton(text="üó°–ù–∞–ø–∞—Å—Ç—å", callback_data="üó°–ù–∞–ø–∞—Å—Ç—å")
    bt2 = telebot.types.InlineKeyboardButton(
        text="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", callback_data="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ"
    )
    bt3 = telebot.types.InlineKeyboardButton(
        text="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å", callback_data="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å"
    )
    bt4 = telebot.types.InlineKeyboardButton(
        text="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä", callback_data="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä"
    )
    if player["nhp"] != 40 or player["nmp"] != 100:
        butt.add(bt1, bt2, bt3, bt4)
    else:
        butt.add(bt1, bt2, bt4)
    attach = open(f"Fenrial_TG/fights/start{uid}.jpg", "rb")

    bd.exec(
        __QUERY_BATTLE_ADD_,
        {
            "vkid": uid,
            "nhp": int(player["nhp"]),
            "hp": int(player["stamina"]) * 10,
            "mp": int(player["nmp"]),
            "name_mob": str(mob[vid_mob][-1]),
            "vid_mob": str(mob[vid_mob][-3]),
            "lvl_mob": int(mob[vid_mob][4]),
            "attack_mob": int(mob[vid_mob][1]),
            "physical_protection_mob": int(mob[vid_mob][2]),
            "magical_protection_mob": int(mob[vid_mob][3]),
            "nhp_mob": int(mob[vid_mob][-2]),
            "hp_mob": int(mob[vid_mob][-2]),
            "def_player": def_player,
            "evasion": evasion,
            "attack_player": int(player["atack"]),
            "intellect": int(player["intellect"]),
        },
    )
    photo(uid, attach, None, butt)


def attack(uid, player, call, inventor):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–∑–æ–≤–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –Ω–∞—á–∞–ª–µ –±–æ—è"""
    text = ""
    if player["clas"] == 2:
        text = "\n\nüë£–í–∞–º —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫—Ä–∞—Å—Ç—å—Å—è –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É –∑–∞ —Å–ø–∏–Ω—É!"
    elif player["clas"] == 3:
        text = "\n\nüë£–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏.\nüîÆ–ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ–∫–∞ –æ–Ω —Å–±–ª–∏–∂–∞–µ—Ç—Å—è —Å –í–∞–º–∏!"
    elif player["clas"] == 1:
        bd.exec(f"UPDATE battle SET status = 2 where vkid = {uid}", None)
    user = user_battle(uid)
    attachment = open(f"Fenrial_TG/fights/start{uid}.jpg", "rb")
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo", media=attachment, caption="", parse_mode="html"
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=None,
    )
    buut = keyboard(player, user, inventor)
    attachment = open(f"Fenrial_TG/player_img/avatar_{player['clas']}.jpg", "rb")
    if player["experience"] == 0 and player["clas"] == 0:
        photo(
            uid,
            attachment,
            f"<b>‚ö†Ô∏è–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è:</b>{text}\n\n‚ö†Ô∏è–ö–Ω–æ–ø–∫–∏ –≤–æ –≤—Ä–µ–º—è –±–æ—è –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç –ª–∏—à—å –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–Ω—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n–° –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏–ª–∏ –≤–æ –≤—Ä–µ–º—è –±–æ—è, –Ω–∞–∂–∞–≤  üìñ",
            buut,
        )
    else:
        photo(uid, attachment, f"<b>‚ö†Ô∏è–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è:</b>{text}", buut)


def request_escape(uid, call, player):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–±–µ–≥–∞"""
    user = user_battle(uid)
    buut = telebot.types.InlineKeyboardMarkup()
    bt1 = telebot.types.InlineKeyboardButton(text="‚úÖ", callback_data="accept_escape")
    bt2 = telebot.types.InlineKeyboardButton(text="‚ùå", callback_data="close_escape")
    buut.add(bt1, bt2)
    spell_player = spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
    dop_text_user_attack = ""
    match user["vid_mob"]:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
    attachment = open(
        image_combat(
            uid, substrate, player, user, spell_player, spell_mob, course_of_battle=0
        ),
        "rb",
    )
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo",
            media=attachment,
            caption=f"‚ö†Ô∏è–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±–µ–∂–∞—Ç—å?",
            parse_mode="html",
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=buut,
    )


def run_away_accept(uid, inventor, call, player):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–±–µ–≥–∞"""
    user = user_battle(uid)
    engine.status_update(uid, 100)
    uron = randint(int(user["attack_mob"] * 1.2), int(user["attack_mob"] * 1.5))
    if player["clas"] > 1 and 0 <= user["status"] < 2:
        uron = 0
    if user["nhp"] - uron > 0:
        attachment = open(f"Fenrial_TG/sys_img/pobeg.jpg", "rb")
        if uron != 0:
            hp_mp_update(uid, user["nhp"] - uron, user["mp"])
            player["nhp"] = user["nhp"] - uron
            player["nmp"] = user["mp"]
            bot.edit_message_media(
                media=telebot.types.InputMedia(
                    type="photo",
                    media=attachment,
                    caption=f"üë£–í–∞–º —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å –æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\nüí•–ü–æ–ª—É—á–µ–Ω–æ {uron} —É—Ä–æ–Ω–∞ –≤ —Å–ø–∏–Ω—É",
                    parse_mode="html",
                ),
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=None,
            )
        else:
            bot.edit_message_media(
                media=telebot.types.InputMedia(
                    type="photo",
                    media=attachment,
                    caption=f"üë£–í–∞–º —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å –æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –Ω–µ –ø–æ–ª—É—á–∏–≤ —É—Ä–æ–Ω–∞ –≤ —Å–ø–∏–Ω—É",
                    parse_mode="html",
                ),
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=None,
            )
        butt = telebot.types.InlineKeyboardMarkup(row_width=2)
        bt2 = telebot.types.InlineKeyboardButton(
            text="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", callback_data="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ"
        )
        bt3 = telebot.types.InlineKeyboardButton(
            text="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å", callback_data="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å"
        )
        bt4 = telebot.types.InlineKeyboardButton(
            text="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä", callback_data="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä"
        )
        butt.add(bt2, bt3, bt4)
        attachment = open(non_combat.image_research(uid, player, inventor), "rb")
        photo(uid, attachment, "<b>üèû –†–∞–≤–Ω–∏–Ω—ã –•–∞–π–¥–∞–º–∞—Ä–∞</b> (1-5 —É—Ä.)", butt)
    else:
        send(
            uid, f"‚ò†–ü–æ–ª—É—á–µ–Ω–æ {uron} —É—Ä–æ–Ω–∞ –≤ —Å–ø–∏–Ω—É", telebot.types.ReplyKeyboardRemove()
        )
        dead(uid, call, inventor, player)


def close_escape(uid, call, inventor, player):
    user = user_battle(uid)
    buut = keyboard(player, user, inventor)
    spell_player = spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
    dop_text_user_attack = ""
    match user["vid_mob"]:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
    attachment = open(
        image_combat(
            uid, substrate, player, user, spell_player, spell_mob, course_of_battle=0
        ),
        "rb",
    )
    match player["clas"]:
        case 1:
            dop_text_user_attack = f'\n\n‚úäüèª–Ø—Ä–æ—Å—Ç—å: {user["status_skill_1"]}'
        case 2:
            dop_text_user_attack = f'\n\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'
        case 3:
            if user["status_skill_1"] > 0:
                dop_text_user_attack = f'\n\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç: {user["status_skill_1"]}'
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo",
            media=attachment,
            caption=f"<b>‚ö†Ô∏è–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è:</b>{dop_text_user_attack}",
            parse_mode="html",
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=buut,
    )


def combat_training_log(uid, call, inventor, player):
    """–í–µ–¥–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –±–æ—è, –±–æ–π, –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –±–æ—è"""

    user = user_battle(uid)

    msg = call.data
    vid_mob = user["vid_mob"]
    choce_spell = randint(1, 100)
    match player["clas"]:
        case 0:
            spell_player = "Fenrial_TG/spells/PlR5HBrrYFw.jpg"
        case 1:
            spell_player = "Fenrial_TG/spells/pYCtxNnpePw.jpg"
        case 2:
            spell_player = "Fenrial_TG/spells/tHQYzUTALKA.jpg"
        case 3:
            spell_player = "Fenrial_TG/spells/JsGTK1YDLFI.jpg"
    user_attack = randint(
        int(user["attack_player"] * 0.8), int(user["attack_player"] * 1.2)
    )
    user_attack = int(user_attack * ((100 - user["physical_protection_mob"]) / 100))
    text_user_attack = f"üî™–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
    dop_text_user_attack = ""
    krv = randint(int(user["attack_player"] * 1), int(user["attack_player"] * 1.5))
    mob_attack_rate = 1

    if player["clas"] == 2:
        dop_text_user_attack = f'\n\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'
    if player["clas"] == 1:
        dop_text_user_attack = f'\n\n‚úäüèª–Ø—Ä–æ—Å—Ç—å: {user["status_skill_1"]}'
    hp_reg_mob = 0

    hp_m = user["nhp_mob"]
    hp_player = user["nhp"]

    regen_player_hp = 0
    regen_player_mp = 0

    if player["clas"] == 0:
        regen_player_hp = 1
        regen_player_mp = 1
    else:
        regen_player_hp = int(player["stamina"] / 2.5)
        regen_player_mp = int(player["intellect"] / 2.5)

    match msg:
        case "üí¢–í—ã–ø–∞–¥":
            nmp_update(uid, (user["mp"] - 10))
            spell_player = "Fenrial_TG/spells/iiORuGQ0rtA.jpg"
            user_attack = randint(
                int(user["attack_player"] * 1.5), int(user["attack_player"] * 2.5)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"üí¢–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
        case "üí•–û–ø–∞—Å–Ω—ã–π –≤—ã–ø–∞–¥":
            nmp_update(uid, (user["mp"] - 15))
            spell_player = "Fenrial_TG/spells/sts_082.jpg"
            user_attack = randint(
                int(user["attack_player"] * 3), int(user["attack_player"] * 4)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"üí•–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_3 = 3 where vkid = {uid}", None)

        case "üó°–ö–æ–≤–∞—Ä–Ω—ã–π —É–¥–∞—Ä":
            nmp_update(uid, (user["mp"] - 7))
            spell_player = "Fenrial_TG/spells/jJ-SsZhfOqU.jpg"
            user_attack = randint(
                int(user["attack_player"] * 2.5), int(user["attack_player"] * 3)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"üó°–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(
                f"UPDATE battle SET status_skill_2 = status_skill_2 + 1 where vkid = {uid}",
                None,
            )
        case "üí•–£–¥–∞—Ä –≤ —Å–ø–∏–Ω—É":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/Bj61TyrCJpo.jpg"
            if user["status"] < 2 or user["status_skill_3"] == 3:
                user_attack = randint(
                    int(user["attack_player"] * 4), int(user["attack_player"] * 4.5)
                )
            else:
                user_attack = randint(
                    int(user["attack_player"] * 1.5), int(user["attack_player"] * 2)
                )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"üí•–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_1 = 3 where vkid = {uid}", None)
        case "‚öî–ü–æ—Ç—Ä–æ—à–µ–Ω–∏–µ":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/yMIuh1cvH-8.jpg"
            user_attack = randint(
                int(user["attack_player"] * 5.2), int(user["attack_player"] * 5.5)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"‚öî–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_2 = 0 where vkid = {uid}", None)
        case "üëÅ–û—Å–ª–µ–ø–ª–µ–Ω–∏–µ":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/f-Omf3Dh7XU.jpg"
            user_attack = 0
            text_user_attack = f"üëÅ–í—ã –æ—Å–ª–µ–ø–∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞"
            spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
            attack_mob = 0
            bd.exec(f"UPDATE battle SET status = 0 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status_skill_3 = 4 where vkid = {uid}", None)
        case "üíî–†–∞—Å—Å–µ—á–µ–Ω–∏–µ":
            nmp_update(uid, (user["mp"] - 7))
            spell_player = "Fenrial_TG/spells/sts_099.jpg"
            user_attack = randint(
                int(user["attack_player"] * 1), int(user["attack_player"] * 1.5)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = (
                f"üíî–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞ –∏ –æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É –æ—Ç–∫—Ä—ã—Ç—É—é —Ä–∞–Ω—É"
            )
            bd.exec(f"UPDATE battle SET status_skill_4 = 5 where vkid = {uid}", None)

        case "üí´–ß–∞—Ä–æ–¥–µ–π—Å–∫–∏–µ —Å—Ç—Ä–µ–ª—ã":
            nmp_update(uid, (user["mp"] - 7))
            spell_player = "Fenrial_TG/spells/srXE0oyETn0.jpg"
            user_attack = randint(
                int(user["intellect"] * 4), int(user["intellect"] * 6)
            )
            user_attack = int(
                user_attack * ((100 - user["magical_protection_mob"]) / 100)
            )
            text_user_attack = f"üí´–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
        case "üíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/HtacL5QRlio.jpg"
            user_attack = 0
            spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
            attack_mob = 0
            text_user_attack = f"üíé–í—ã —Å–æ—Ç–≤–æ—Ä–∏–ª–∏ –ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç, –ø–æ–≥–ª–æ—â–∞—é—â–∏–π —á–∞—Å—Ç—å —É—Ä–æ–Ω–∞"
            if user["status"] < 2:
                text_user_attack = f"üíé–í—ã —Å–æ—Ç–≤–æ—Ä–∏–ª–∏ –ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç, –ø–æ–≥–ª–æ—â–∞—é—â–∏–π —á–∞—Å—Ç—å —É—Ä–æ–Ω–∞\n\n‚ùóÔ∏è–ü–æ–∫–∞ –í—ã —Ç–≤–æ—Ä–∏–ª–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ, –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø–æ–¥–æ—à–µ–ª –±–ª–∏–∂–µ!"
            bd.exec(f"UPDATE battle SET status_skill_1 = 3 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status = 1 where vkid = {uid}", None)
        case "üî•–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä":
            nmp_update(uid, (user["mp"] - 17))
            spell_player = "Fenrial_TG/spells/Jyv-lHRyEy0.jpg"
            user_attack = randint(
                int(user["intellect"] * 8), int(user["intellect"] * 10)
            )
            user_attack = int(
                user_attack * ((100 - user["magical_protection_mob"]) / 100)
            )
            text_user_attack = f"üî•–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_2 = 4 where vkid = {uid}", None)
        case "‚ú®–°–∫–∞—á–æ–∫":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/VRliOnB1N50.jpg"
            user_attack = 0
            text_user_attack = f"‚ú®–í–∞–º —É–¥–∞–ª–æ—Å—å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–±–æ–ª—å—à–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ"
            spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
            attack_mob = 0
            bd.exec(f"UPDATE battle SET status = 0 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status_skill_3 = 3 where vkid = {uid}", None)
        case "‚ùÑ–ö–æ–ª—å—Ü–æ –ª—å–¥–∞":
            nmp_update(uid, (user["mp"] - 20))
            spell_player = "Fenrial_TG/spells/hwjVwpePUc0.jpg"
            user_attack = randint(
                int(user["intellect"] * 8), int(user["intellect"] * 10)
            )
            user_attack = int(
                user_attack * ((100 - user["magical_protection_mob"]) / 100)
            )
            text_user_attack = f"‚ùÑ–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_4 = 4 where vkid = {uid}", None)

        case "üó°–ê—Ç–∞–∫–∞":
            if player["clas"] == 1:
                bd.exec(
                    f"UPDATE battle SET status_skill_1 = status_skill_1 + 1 where vkid = {uid}",
                    None,
                )
                if 1 < user["status_skill_5"] - 2 < 5:
                    user_attack = randint(
                        int(user["attack_player"] * 1.5), int(user["attack_player"] * 2)
                    )
                    user_attack = int(
                        user_attack * ((100 - user["physical_protection_mob"]) / 100)
                    )
                    text_user_attack = f"üî™–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞(‚ô®)"
        case "‚úäüèª–ú–æ—â–Ω—ã–π —É–¥–∞—Ä":
            nmp_update(uid, (user["mp"] - 20))
            spell_player = "Fenrial_TG/spells/8oXVpm3NzwI.jpg"
            user_attack = randint(
                int(user["attack_player"] * 2 * user["status_skill_1"]),
                int(user["attack_player"] * 3 * user["status_skill_1"]),
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"‚úäüèª–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_1 = 0 where vkid = {uid}", None)
        case "üî•–£–¥–∞—Ä –≥–µ—Ä–æ—è":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/54WTwwTA8Mk.jpg"
            user_attack = randint(
                int(user["attack_player"] * 3), int(user["attack_player"] * 4)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f"üî•–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞"
            bd.exec(f"UPDATE battle SET status_skill_2 = 5 where vkid = {uid}", None)
        case "üí•–†–∞—Å–∫–æ–ª –±—Ä–æ–Ω–∏":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/IePQ22dJE7o.jpg"
            bd.exec(
                f"UPDATE battle SET physical_protection_mob = round(physical_protection_mob / 2) where vkid = {uid}",
                None,
            )
            user["physical_protection_mob"] = round(user["physical_protection_mob"] / 2)
            user_attack = randint(
                int(user["attack_player"] * 1), int(user["attack_player"] * 1.5)
            )
            user_attack = int(
                user_attack * ((100 - user["physical_protection_mob"]) / 100)
            )
            text_user_attack = f'üí•–í—ã –Ω–∞–Ω–µ—Å–ª–∏ {user_attack} —É—Ä–æ–Ω–∞ –∏ —É–º–µ–Ω—å—à–∏–ª–∏ –±—Ä–æ–Ω—é –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –Ω–∞ 50% (—Å–Ω–∏–∂–µ–Ω–∞ –¥–æ {user["physical_protection_mob"]}%)'
            bd.exec(f"UPDATE battle SET status_skill_3 = 4 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status_skill_6 = 1 where vkid = {uid}", None)
        case "üëπ–î–µ–º–æ—Ä–∞–ª–∏–∑—É—é—â–∏–π –∫—Ä–∏–∫":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/FKOuMhNFhEs.jpg"
            user_attack = 0
            spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
            attack_mob = 0
            text_user_attack = f"üëπ–°–∏–ª–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ —Å–Ω–∏–∂–µ–Ω–∞ –Ω–∞ 25% –Ω–∞ 3 —Ö–æ–¥–∞"
            mob_attack_rate = 0.5
            bd.exec(f"UPDATE battle SET status_skill_4 = 6 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status = 1 where vkid = {uid}", None)
        case "‚ô®–ë–æ–µ–≤–æ–π –∫—Ä–∏–∫":
            nmp_update(uid, (user["mp"] - 12))
            spell_player = "Fenrial_TG/spells/xPY_6TVL1Hw.jpg"
            user_attack = 0
            spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
            attack_mob = 0
            text_user_attack = f"‚ô®–°–∏–ª–∞ –æ–±—ã—á–Ω—ã—Ö —É–¥–∞—Ä–æ–≤ –ø–æ–≤—ã—à–µ–Ω–∞ –Ω–∞ 50%"
            bd.exec(f"UPDATE battle SET status_skill_5 = 6 where vkid = {uid}", None)
            bd.exec(f"UPDATE battle SET status = 1 where vkid = {uid}", None)

    user = user_battle(uid)
    if player["clas"] > 1 and user["status"] > 0:
        choce_spell = 100
    if player["clas"] == 1 and user["status"] == 1:
        choce_spell = 100

    match vid_mob:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
            spell_mob = "Fenrial_TG/spells/sts_073.jpg"
            attack_mob = randint(
                int(user["attack_mob"] * 0.8), int(user["attack_mob"] * 1.2)
            )
            attack_mob = int(
                attack_mob * mob_attack_rate * ((100 - user["def_player"]) / 100)
            )
            text_attack_mob = f"\nüó°–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å {attack_mob} —É—Ä–æ–Ω–∞"
            if 0 < choce_spell < 11:
                spell_mob = "Fenrial_TG/spells/0o1ls5KmWTo.jpg"
                attack_mob = 0
                hp_reg_mob = int(user["hp_mob"] * 0.15)
                text_attack_mob = f"\nüíñ–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª {hp_reg_mob} –∑–¥–æ—Ä–æ–≤—å—è!"
            elif 11 < choce_spell < 20:
                spell_mob = "Fenrial_TG/spells/rpg03_014.jpg"
                attack_mob = 0
                new_attack_mob = int(user["attack_mob"] * 1.35)
                text_attack_mob = f"\nüî•–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø–æ–≤—ã—Å–∏–ª –∞—Ç–∞–∫—É –¥–æ {new_attack_mob}!"
                bd.exec(
                    f"UPDATE battle SET attack_mob = {new_attack_mob} where vkid = {uid}",
                    None,
                )
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
            spell_mob = "Fenrial_TG/spells/pYCtxNnpePw.jpg"
            attack_mob = randint(
                int(user["attack_mob"] * 0.8), int(user["attack_mob"] * 1.2)
            )
            attack_mob = int(
                attack_mob * mob_attack_rate * ((100 - user["def_player"]) / 100)
            )
            text_attack_mob = f"\nüó°–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å {attack_mob} —É—Ä–æ–Ω–∞"
            if 0 < choce_spell < 11:
                spell_mob = "Fenrial_TG/spells/Pm98fDKoY4A.jpg"
                attack_mob = randint(int(attack_mob * 1.5), int(attack_mob * 2))
                attack_mob = int(
                    attack_mob * mob_attack_rate * ((100 - user["def_player"]) / 100)
                )
                text_attack_mob = f"\nüí£–ë–æ–º–±–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤–∑–æ—Ä–≤–∞–ª–∞—Å—å –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ –í–∞–º–∏, –Ω–∞–Ω–µ—Å—è {attack_mob} —É—Ä–æ–Ω–∞!"
            elif 11 < choce_spell < 20 and player["clas"] != 3:
                spell_mob = "Fenrial_TG/spells/psk_055.jpg"
                attack_mob = 0
                text_attack_mob = f"\n‚ö°–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–º–æ–≥ –ø–∞—Ä–∏—Ä–æ–≤–∞—Ç—å –í–∞—à—É –∞—Ç–∞–∫—É!"
                user_attack = 0
                text_user_attack = ""
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
            spell_mob = "Fenrial_TG/spells/JsGTK1YDLFI.jpg"
            attack_mob = randint(
                int(user["attack_mob"] * 0.8), int(user["attack_mob"] * 1.2)
            )
            attack_mob = int(attack_mob * ((100 - user["def_player"]) / 100))
            text_attack_mob = f"\nüó°–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å {attack_mob} —É—Ä–æ–Ω–∞"
            if 0 < choce_spell < 11:
                spell_mob = "Fenrial_TG/spells/XKU2x6of9V4.jpg"
                attack_mob = 0
                mana = randint(15, 25)
                text_attack_mob = f"\nüíÄ–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–∂–µ–≥ –í–∞–º {mana} –º–∞–Ω—ã"
                if user["mp"] - mana < 0:
                    nmp_update(uid, 0)
                else:
                    nmp_update(uid, user["mp"] - mana)
            elif 11 < choce_spell < 20:
                spell_mob = "Fenrial_TG/spells/12a-5xsKm8s.jpg"
                attack_mob = randint(int(attack_mob * 1.5), int(attack_mob * 2))
                attack_mob = int(attack_mob * ((100 - user["def_player"]) / 100))
                text_attack_mob = f"\nüí•–°—Ç—Ä–µ–ª–∞ —Ç–µ–º–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –æ–±–æ–∂–≥–ª–∞ –í–∞–º –∑–∞–ø—è—Å—Ç—å–µ, –Ω–∞–Ω–µ—Å—è {attack_mob} —É—Ä–æ–Ω–∞!"
            elif (
                20 < choce_spell < 30
                and player["clas"] == 3
                and user_attack > int(user["attack_player"] * 1.3)
            ):
                spell_mob = "Fenrial_TG/spells/DfwS996bjEg.jpg"
                user_attack = 0
                attack_mob = 0
                text_user_attack = ""
                text_attack_mob = f"\nüåÄ–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –æ—Ç—Ä–∞–∑–∏–ª –í–∞—à–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ!"

    user = user_battle(uid)
    hp_m = hp_m - user_attack + hp_reg_mob
    if 1 < user["status_skill_4"] < 4 and player["clas"] == 2:
        hp_m = hp_m - krv

    if hp_m > user["hp_mob"]:
        hp_m = user["hp_mob"]

    if user["status"] < 2 and player["clas"] > 0:
        attack_mob = 0
        spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
        text_attack_mob = ""

    else:
        if randint(1, 100) <= user["evasion"] and attack_mob != 0:
            attack_mob = 0
            text_attack_mob = "\n‚úã–í–∞–º —É–¥–∞–ª–æ—Å—å —É–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ—Ç –∞—Ç–∞–∫–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞"

        if 0 < user["status_skill_1"] < 4 and player["clas"] == 3 and attack_mob > 0:
            attack_mob = round(attack_mob * 0.5)
            bd.exec(
                f"UPDATE battle SET status_skill_1 = status_skill_1 - 1 where vkid = {uid}",
                None,
            )
            user["status_skill_1"] = user["status_skill_1"] - 1
            if user["status_skill_1"] != 0:
                dop_text_user_attack = f'\n\nüíé{attack_mob} —É—Ä–æ–Ω–∞ –ø–æ–≥–ª–æ—â–µ–Ω–æ —â–∏—Ç–æ–º\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç {user["status_skill_1"]}'
            else:
                dop_text_user_attack = (
                    f"\n\nüíé{attack_mob } —É—Ä–æ–Ω–∞ –ø–æ–≥–ª–æ—â–µ–Ω–æ —â–∏—Ç–æ–º\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç —Ä–∞–∑—Ä—É—à–µ–Ω!"
                )
        hp_player = hp_player - attack_mob + regen_player_hp

    mp_player = user["mp"] + regen_player_mp
    if mp_player > 100:
        mp_player = 100
    if hp_player > user["hp"]:
        hp_player = user["hp"]

    if hp_m <= 0:
        # –ü–æ–±–µ–¥–∞ #
        bd.exec(f"UPDATE battle SET nhp_mob = 0 where vkid = {uid}", None)
        user = user_battle(uid)
        text_attack_mob = "\n\n‚ò†Ô∏èC–º–µ—Ä—Ç–µ–ª—å–Ω—ã–π —É—Ä–æ–Ω!"
        dop_text_user_attack = ""
        if 0 < user["status_skill_4"] < 4 and player["clas"] == 2:
            dop_text_user_attack = f"\nüíî–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Ç–µ—Ä—è–µ—Ç {krv} –∑–¥–æ—Ä–æ–≤—å—è –æ—Ç –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è"
        spell_mob = "Fenrial_TG/spells/sts_033.jpg"
        attachment = open(
            image_combat(
                uid,
                substrate,
                player,
                user,
                spell_player,
                spell_mob,
                course_of_battle=0,
            ),
            "rb",
        )
        bot.edit_message_media(
            media=telebot.types.InputMedia(
                type="photo",
                media=attachment,
                caption=f"{text_user_attack}{dop_text_user_attack}{text_attack_mob}",
                parse_mode="html",
            ),
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=None,
        )

        im = Image.open("Fenrial_TG/sys_img/pobeda_1.jpg")
        pointsize = 32
        font = "Fenrial_TG/days2.ttf"
        draw = ImageDraw.Draw(im)
        font = ImageFont.truetype(font, pointsize)

        if player["clas"] != 0:
            new_exp = round(player["level"] * 4.5)
        else:
            new_exp = 30

        if player["level"] != 1:
            exp = f"–û–ø—ã—Ç:  {player['experience']+new_exp} / {player['level_limit']} ( +{new_exp} )"
            exp = f"{(31 - len(exp))*' '}{exp}"
        else:
            exp = f"–û–ø—ã—Ç:  {player['experience']+30} / 180 ( +30 )"
            exp = f"{(31 - len(exp))*' '}{exp}"

        moneta = Image.open(f"Fenrial_TG/sys_img/8ytVa5V8lEo.jpg")
        im.paste(moneta, (146, 327))

        exp_text_bar = f"{int((((player['experience']+new_exp)*100/player['level_limit'])//10)*10)}"
        if exp_text_bar != "10" and exp_text_bar != "0":
            exp_bar = Image.open(f"Fenrial_TG/bar_mp_hp/e_n_{exp_text_bar}.jpg")
            im.paste(exp_bar, (89, 767))

        nagrada = randint(player["level"], player["level"] * 2)
        if len(f"{nagrada}") == 1:
            nagrada = f"{(8 - len(f'{nagrada}'))*' '}{nagrada}"
        else:
            nagrada = f"{(7 - len(f'{nagrada}'))*' '}{nagrada}"
        coordinates = {"–∫–æ–ª –Ω–∞–≥—Ä–∞–¥—ã": [240, 485, str(nagrada)], "–æ–ø—ã—Ç": [400, 719, exp]}

        def draw_text(x_cor: int, y_cor: int, text: str) -> None:
            """–§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞"""
            for i in ((-5, -5), (5, -5), (-5, 5), (5, 5), (0, 0)):
                draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="black")
            draw.text((x_cor + i[0], y_cor + i[1]), text, font=font, fill="white")

        # –ü–µ—Ä–µ–±–µ—Ä–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä–µ–º–µ—Ç—Ä–æ–≤ –∏ –≤—ã–∑–æ–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
        for item in coordinates.values():
            draw_text(item[0], item[1], item[2])

        im.save(f"Fenrial_TG/fights/pobeda_{uid}.jpg")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–æ–≤ (–æ–ø—ã—Ç, –Ω–∞–≥—Ä–∞–¥–∞) #

        bd.exec(
            f"UPDATE players SET experience = experience + {new_exp}, balance = balance + {nagrada} where vkid = {uid}",
            None,
        )
        bd.exec(
            f"UPDATE statistics SET mobs_killed = mobs_killed + 1 where vkid = {uid}",
            None,
        )
        hp_mp_update(uid, user["nhp"], user["mp"])
        engine.unloading_players()
        engine.unloading_statistics()
        player["nhp"] = user["nhp"]
        player["nmp"] = user["mp"]
        player["experience"] = player["experience"] + new_exp
        bd.exec(__QUERY_DELETE_BATTLE, {"vkid": uid})
        butt = telebot.types.InlineKeyboardMarkup(row_width=2)
        bt2 = telebot.types.InlineKeyboardButton(
            text="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", callback_data="üëû–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ"
        )
        bt3 = telebot.types.InlineKeyboardButton(
            text="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å", callback_data="‚õ∫–†–∞–∑–±–∏—Ç—å –ª–∞–≥–µ—Ä—å"
        )
        bt4 = telebot.types.InlineKeyboardButton(
            text="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä", callback_data="üè∞–≤ –•–∞–π–¥–∞–º–∞—Ä"
        )
        if user["nhp"] != 40 or user["mp"] != 100:
            butt.add(bt2, bt3, bt4)
        else:
            butt.add(bt2, bt4)
        attachment = open(f"Fenrial_TG/fights/pobeda_{uid}.jpg", "rb")
        photo(uid, attachment, "", None)

        if player["experience"] >= player["level_limit"]:
            ### –ù–æ–≤—ã–π –õ–í–õ ###
            attachment = open(f"Fenrial_TG/sys_img/yIKPoQPbSZA.jpg", "rb")
            if player["level"] > 1:
                photo(
                    uid,
                    attachment,
                    f'üéâ–ü–æ–ª—É—á–µ–Ω {player["level"]+1} —É—Ä–æ–≤–µ–Ω—å!!!\nüíñ–ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!',
                    None,
                )
            else:
                photo(
                    uid,
                    attachment,
                    f'<b>üéâ–ü–æ–ª—É—á–µ–Ω {player["level"]+1} —É—Ä–æ–≤–µ–Ω—å!!!</b>\nüíñ–ó–¥–æ—Ä–æ–≤—å–µ –∏ –º–∞–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!\n\nüîî–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –≤ –†–∞—Ç—É—à–µ',
                    None,
                )
            player["nhp"] = player["stamina"] * 10
            player["nmp"] = 100
            player["experience"] = 0
            player["level"] = player["level"] + 1
            player["level_limit"] = int(
                (player["level"]) * 6 * (15 + 15 * int(player["level"]))
            )
            bd.exec(
                f"UPDATE players SET nhp = {player['stamina']*10},\
                    nmp = 100, experience = 0, level = level + 1\
                    where vkid = {uid}",
                None,
            )
            engine.unloading_players()

        attachment = open(non_combat.image_research(uid, player, inventor), "rb")
        photo(uid, attachment, "<b>üèû –†–∞–≤–Ω–∏–Ω—ã –•–∞–π–¥–∞–º–∞—Ä–∞</b> (1-5 —É—Ä.)", butt)

    elif hp_m > 0 and hp_player <= 0:
        nhp_update(uid, 0)
        nmp_update(uid, mp_player)
        bd.exec(f"UPDATE battle SET nhp_mob = {hp_m} where vkid = {uid}", None)
        user = user_battle(uid)
        attachment = open(
            image_combat(
                uid,
                substrate,
                player,
                user,
                spell_player,
                spell_mob,
                course_of_battle=0,
            ),
            "rb",
        )
        bot.edit_message_media(
            media=telebot.types.InputMedia(
                type="photo",
                media=attachment,
                caption=f"{text_user_attack}{text_attack_mob}{dop_text_user_attack}",
                parse_mode="html",
            ),
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=None,
        )
        dead(uid, call, inventor, player)

    else:
        nhp_update(uid, hp_player)
        nmp_update(uid, mp_player)
        bd.exec(f"UPDATE battle SET nhp_mob = {hp_m} where vkid = {uid}", None)

        if player["clas"] == 3 or player["clas"] == 1:
            if user["status_skill_2"] > 0:
                bd.exec(
                    f"UPDATE battle SET status_skill_2 = status_skill_2 - 1 where vkid = {uid}",
                    None,
                )

        if user["status_skill_1"] > 0 and player["clas"] == 2:
            bd.exec(
                f"UPDATE battle SET status_skill_1 = status_skill_1 - 1 where vkid = {uid}",
                None,
            )
        if user["status_skill_3"] > 0 and user["status"] > 1:
            bd.exec(
                f"UPDATE battle SET status_skill_3 = status_skill_3 - 1 where vkid = {uid}",
                None,
            )
        if user["status_skill_4"] > 0 and user["status"] > 1 and player["clas"] != 2:
            bd.exec(
                f"UPDATE battle SET status_skill_4 = status_skill_4 - 1 where vkid = {uid}",
                None,
            )
        if user["status_skill_4"] > 0 and player["clas"] == 2:
            bd.exec(
                f"UPDATE battle SET status_skill_4 = status_skill_4 - 1 where vkid = {uid}",
                None,
            )
        if user["status_skill_5"] > 0 and user["status"] > 1:
            bd.exec(
                f"UPDATE battle SET status_skill_5 = status_skill_5 - 1 where vkid = {uid}",
                None,
            )

        if user["cooldown_potion"] > 0:
            bd.exec(
                f"UPDATE battle SET cooldown_potion = cooldown_potion - 1 where vkid = {uid}",
                None,
            )
        bd.exec(f"UPDATE battle SET status = status + 1 where vkid = {uid}", None)

        user = user_battle(uid)

        match player["clas"]:
            case 1:
                buff = ""
                debuff = ""
                if user["status_skill_4"] > 3:
                    debuff = f'üëπ–£–º–µ–Ω—å—à–µ–Ω–∏–µ –∞—Ç–∞–∫–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞: {-1*(3 - user["status_skill_4"])}\n'
                if user["status_skill_4"] == 3:
                    debuff = f"üëπ–£–º–µ–Ω—å—à–µ–Ω–∏–µ –∞—Ç–∞–∫–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ —Ä–∞–∑–≤–µ—è–Ω–æ\n"
                if user["status_skill_5"] > 3:
                    buff = f'‚ô®–£—Å–∏–ª–µ–Ω–∏–µ –∞—Ç–∞–∫–∏: {-1*(3 - user["status_skill_5"])}\n'
                if user["status_skill_5"] == 3:
                    buff = f"‚ô®–£—Å–∏–ª–µ–Ω–∏–µ –í–∞—à–µ–π –∞—Ç–∞–∫–∏ —Ä–∞–∑–≤–µ—è–Ω–æ\n"
                dop_text_user_attack = (
                    f'\n\n{debuff}{buff}‚úäüèª–Ø—Ä–æ—Å—Ç—å: {user["status_skill_1"]}'
                )
            case 2:
                dop_text_user_attack = f'\n\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'
            case 3:
                if user["status_skill_1"] > 0 and attack_mob == 0:
                    dop_text_user_attack = (
                        f'\n\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç: {user["status_skill_1"]}'
                    )

        buut = keyboard(player, user, inventor)
        attachment = open(
            image_combat(
                uid,
                substrate,
                player,
                user,
                spell_player,
                spell_mob,
                course_of_battle=1,
            ),
            "rb",
        )

        if 0 < user["status_skill_4"] < 4 and player["clas"] == 2:
            dop_text_user_attack = f'\n\nüíî–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Ç–µ—Ä—è–µ—Ç {krv} –∑–¥–æ—Ä–æ–≤—å—è –æ—Ç –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'

        bot.edit_message_media(
            media=telebot.types.InputMedia(
                type="photo",
                media=attachment,
                caption=f"{text_user_attack}{text_attack_mob}{dop_text_user_attack}",
                parse_mode="html",
            ),
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=buut,
        )


def dead(uid, call, inventor, player):
    """–°–º–µ—Ä—Ç—å"""
    engine.status_update(uid, 50)
    bd.exec(f"UPDATE statistics SET died = died + 1 where vkid = {uid}", None)
    player["nhp"] = 1
    player["nmp"] = 1
    if player["level"] == 1:
        time_study = 60
        start_study = datetime.today()
        end_study = start_study + timedelta(seconds=time_study)
        engine.timers_update(uid, start_study, end_study, 50)
        attachment = open(f"Fenrial_TG/sys_img/xYsLHoNWfrk.jpg", "rb")
        photo(
            uid,
            attachment,
            f'<b>‚ò†–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–¥–æ—Ö, –ø–µ—Ä–µ–¥ –≥–ª–∞–∑–∞–º–∏ —Ç—å–º–∞...</b>\n‚ö†–ù–∞ 1 —É—Ä–æ–≤–Ω–µ —à—Ç—Ä–∞—Ñ–æ–≤ –∑–∞ —Å–º–µ—Ä—Ç—å –Ω–µ—Ç.\n‚ö°–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.{text.training["–°–º–µ—Ä—Ç—å"]}',
        )
        bd.exec(__QUERY_DELETE_BATTLE, {"vkid": uid})
        return threading.Thread(
            target=non_combat.revival, args=[uid, player, inventor, time_study]
        ).start()
    else:
        time_study = 60 * player["level"]
        start_study = datetime.today()
        end_study = start_study + timedelta(seconds=time_study)
        engine.timers_update(uid, start_study, end_study, 50)
        attachment = open(f"Fenrial_TG/sys_img/xYsLHoNWfrk.jpg", "rb")
        player["experience"] = round(player["experience"] * 0.9)
        bd.exec(
            f"UPDATE players SET balance = round(balance*0.75), experience = round(experience*0.9) where vkid = {uid}",
            None,
        )
        engine.unloading_players()
        photo(
            uid,
            attachment,
            f"<b>‚ò†–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–¥–æ—Ö, –ø–µ—Ä–µ–¥ –≥–ª–∞–∑–∞–º–∏ —Ç—å–º–∞...</b>\n\n‚ö†–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏:\nüìó10% –æ–ø—ã—Ç–∞ –∏ üí∞25% –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç.\n‚ö°–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å–º–æ–∂–µ—Ç–µ —á–µ—Ä–µ–∑ {player['level']} –º–∏–Ω",
        )
        bd.exec(__QUERY_DELETE_BATTLE, {"vkid": uid})
        return threading.Thread(
            target=non_combat.revival, args=[uid, player, inventor, time_study]
        ).start()


def potion(uid, call, inventor, player):
    user = user_battle(uid)
    potion_hp_text = ""
    potion_mp_text = ""
    potion_hp = 0
    potion_mp = 0
    for i in inventor.keys():
        if inventor[i] == 103:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            potion_hp = f"{inventor[item_quantity]}"
            potion_hp_text = (
                f'üî¥–§–ª–∞–∫–æ–Ω –∂–∏–∑–Ω–∏ (+{int(player["stamina"]*3)}üíö): {potion_hp} —à—Ç.'
            )
            break
    for i in inventor.keys():
        if inventor[i] == 104:
            item_quantity = "quantity_"
            item_quantity = item_quantity + re.search(r"\d+", i)[0]
            potion_mp = f"{inventor[item_quantity]}"
            potion_mp_text = f"\nüîµ–§–ª–∞–∫–æ–Ω –º–∞–Ω—ã (+{30}‚õé): {potion_mp} —à—Ç."
            break
    spell_player = spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
    match user["vid_mob"]:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
    attachment = open(
        image_combat(
            uid, substrate, player, user, spell_player, spell_mob, course_of_battle=0
        ),
        "rb",
    )
    buut = telebot.types.InlineKeyboardMarkup(row_width=2)
    bt1 = telebot.types.InlineKeyboardButton(
        text="üî¥–§–ª–∞–∫–æ–Ω –∂–∏–∑–Ω–∏", callback_data="üî¥–§–ª–∞–∫–æ–Ω –∂–∏–∑–Ω–∏"
    )
    bt2 = telebot.types.InlineKeyboardButton(
        text="üîµ–§–ª–∞–∫–æ–Ω –º–∞–Ω—ã", callback_data="üîµ–§–ª–∞–∫–æ–Ω –º–∞–Ω—ã"
    )
    if potion_mp != 0 and potion_hp != 0:
        buut.add(bt1, bt2)
    elif potion_mp != 0 and potion_hp == 0:
        buut.add(bt2)
    elif potion_mp == 0 and potion_hp != 0:
        buut.add(bt1)
    bt3 = telebot.types.InlineKeyboardButton(
        text="‚ùå–ó–∞–∫—Ä—ã—Ç—å", callback_data="—É–±—Ä–∞—Ç—å –∑–µ–ª—å—è"
    )
    buut.add(bt3)
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo",
            media=attachment,
            caption=f"{potion_hp_text}{potion_mp_text}",
            parse_mode="html",
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=buut,
    )


def del_potion(uid, call, inventor, player):
    user = user_battle(uid)
    buut = keyboard(player, user, inventor)
    spell_player = spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
    dop_text_user_attack = ""
    match user["vid_mob"]:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
    attachment = open(
        image_combat(
            uid, substrate, player, user, spell_player, spell_mob, course_of_battle=0
        ),
        "rb",
    )
    match player["clas"]:
        case 1:
            dop_text_user_attack = f'\n\n‚úäüèª–Ø—Ä–æ—Å—Ç—å: {user["status_skill_1"]}'
        case 2:
            dop_text_user_attack = f'\n\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'
        case 3:
            if user["status_skill_1"] > 0:
                dop_text_user_attack = f'\n\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç: {user["status_skill_1"]}'
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo",
            media=attachment,
            caption=f"<b>‚ö†Ô∏è–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è:</b>{dop_text_user_attack}",
            parse_mode="html",
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=buut,
    )


def application_potion(uid, call, inventor, player, item):
    user = user_battle(uid)
    dop_text_user_attack = ""
    bd.exec(
        f"UPDATE statistics SET potions_drunk = potions_drunk + 1 where vkid = {uid}",
        None,
    )
    if item == "üî¥–§–ª–∞–∫–æ–Ω –∂–∏–∑–Ω–∏":
        text = f'üíö–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {int(player["stamina"]*3)} HP\n\n'
        hp_player = user["nhp"] + int(player["stamina"] * 3)
        if hp_player > user["hp"]:
            hp_player = user["hp"]
        nhp_update(uid, hp_player)
        engine.decrease_minus(uid, 103, 1)
        spell_player = "Fenrial_TG/spells/id_103.jpg"
    else:
        text = "‚õé–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 30 MP\n\n"
        mp_player = user["mp"] + 30
        if mp_player > 100:
            mp_player = 100
        nmp_update(uid, mp_player)
        engine.decrease_minus(uid, 104, 1)
        spell_player = "Fenrial_TG/spells/id_104.jpg"
    bd.exec(f"UPDATE battle SET cooldown_potion = 5 where vkid = {uid}", None)
    user = user_battle(uid)
    ### –ù–∞–≤—ã–∫–∏ ###
    spell_mob = "Fenrial_TG/spells/rpg03_013.jpg"
    match user["vid_mob"]:
        case "ü¶á":
            substrate = "Fenrial_TG/moobs/t5cc_QEdE5c_f.jpg"
        case "üßü‚Äç‚ôÇÔ∏è":
            substrate = "Fenrial_TG/moobs/TfD0aaRQ5fI_f.jpg"
        case "üíÄ":
            substrate = "Fenrial_TG/moobs/VDTh1K2lQ7E_f.jpg"
    attachment = open(
        image_combat(
            uid, substrate, player, user, spell_player, spell_mob, course_of_battle=0
        ),
        "rb",
    )
    buut = keyboard(player, user, inventor)
    match player["clas"]:
        case 1:
            dop_text_user_attack = f'\n\n‚úäüèª–Ø—Ä–æ—Å—Ç—å: {user["status_skill_1"]}'
        case 2:
            dop_text_user_attack = f'\n\nüó°–°–µ—Ä–∏—è —É–¥–∞—Ä–æ–≤: {user["status_skill_2"]}'
        case 3:
            if user["status_skill_1"] > 0:
                dop_text_user_attack = f'\n\nüíé–ú–æ—Ä–æ–∑–Ω—ã–π —â–∏—Ç: {user["status_skill_1"]}'
    bot.edit_message_media(
        media=telebot.types.InputMedia(
            type="photo",
            media=attachment,
            caption=f"{text}<b>‚ö†Ô∏è–í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è:</b>{dop_text_user_attack}",
            parse_mode="html",
        ),
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        reply_markup=buut,
    )


from dataclasses import dataclass


@dataclass
class PlayerCombat:
    class_player: int = 0
    nhp: int = 0
    status: int = 0
    move_index: int = 0
    hp: int = 0
    mp: int = 0
    cooldown_potion: int = 0
    evasion: int = 0
    attack_player: int = 0
    intellect: int = 0
    attack_player_stack: int = 0
    skill_1: int = 0
    skill_1_stack: int = 0
    skill_2: int = 0
    skill_2_stack: int = 0
    skill_3: int = 0
    skill_3_stack: int = 0
    skill_4: int = 0
    skill_4_stack: int = 0
    skill_5: int = 0
    skill_5_stack: int = 0

    physical_protection_mob: int = 0
    magical_protection_mob: int = 0

    def skill_number(self, skill) -> bool:
        match skill.skill_number:
            case 1:
                return self.skill_1
            case 2:
                return self.skill_2
            case 3:
                return self.skill_3
            case 4:
                return self.skill_4
            case 5:
                return self.skill_5

    def addiction_number(self, skill) -> bool:
        match skill.addiction:
            case 1:
                return self.skill_1_stack
            case 2:
                return self.skill_2_stack
            case 3:
                return self.skill_3_stack
            case 4:
                return self.skill_4_stack
            case 5:
                return self.skill_5_stack
            case 10:
                return self.attack_player_stack

    def is_ready_skill(self, skill) -> bool:
        if skill.addiction == 0:
            if (
                self.move_index >= self.skill_number(skill) + skill.cooldown_skill
                and self.mp >= skill.skill_cost
            ):
                return skill.as_button()
        else:
            if (
                self.move_index >= self.skill_number(skill) + skill.cooldown_skill
                and self.addiction_number(skill) > 1
                and self.mp >= skill.skill_cost
            ):
                return skill.as_button()

    def damage(self, skill) -> bool:
        if skill.skill_damage_type == 0:
            self.dmg = randint(
                int(
                    self.attack_player
                    * 0.8
                    * skill.skill_coefficient
                    * ((100 - self.physical_protection_mob) / 100)
                ),
                int(
                    self.attack_player
                    * 1.2
                    * skill.skill_coefficient
                    * ((100 - self.physical_protection_mob) / 100)
                ),
            )
            if skill.addiction == 10:
                self.dmg * self.addiction_number(skill)
        else:
            self.dmg = randint(
                int(
                    self.intellect
                    * 0.8
                    * skill.skill_coefficient
                    * ((100 - self.magical_protection_mob) / 100)
                ),
                int(
                    self.intellect
                    * 1.2
                    * skill.skill_coefficient
                    * ((100 - self.magical_protection_mob) / 100)
                ),
            )
        return self.dmg

    @property
    def critical(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∞"""
        return randint(1, 100) <= 5

    @property
    def chance_evasion(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∫–ª–æ–Ω–µ–Ω–∏–µ"""
        tmp_miss = randint(1, 100)
        return tmp_miss <= self.evasion

    @property
    def hp_percent(self):
        """–ü—Ä–æ—Ü–µ–Ω—Ç —Ö–ø –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –±–∞—Ä–∞ —Ö–ø"""
        if int(self.nhp / self.hp * 100) // 10 == 0 and self.nhp > 0:
            return 1
        else:
            return int(self.nhp / self.hp * 100) // 10

    @property
    def mp_percent(self):
        """–ü—Ä–æ—Ü–µ–Ω—Ç –º–ø –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –±–∞—Ä–∞ —Ö–ø"""
        if self.mp // 10 == 0 and self.mp > 0:
            return 1
        else:
            return self.mp // 10


def user_battle(uid):
    """–í—ã–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –±–æ–π –∏–∑ –ë–î –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞"""
    for item in bd.battle(uid):
        user = PlayerCombat(
            class_player=item.get("vkid", 0),
            nhp=item.get("nhp", 0),
            status=item.get("status", 0),
            move_index=item.get("move_index", 0),
            hp=item.get("hp", 0),
            mp=item.get("mp", 0),
            cooldown_potion=item.get("cooldown_potion", 0),
            evasion=item.get("evasion", 0),
            attack_player=item.get("attack_player", 0),
            intellect=item.get("intellect", 0),
            attack_player_stack=item.get("attack_player_stack", 0),
            skill_1=item.get("skill_1", 0),
            skill_1_stack=item.get("skill_1_stack", 0),
            skill_2=item.get("skill_2", 0),
            skill_2_stack=item.get("skill_2_stack", 0),
            skill_3=item.get("skill_3", 0),
            skill_3_stack=item.get("skill_3_stack", 0),
            skill_4=item.get("skill_4", 0),
            skill_4_stack=item.get("skill_4_stack", 0),
            skill_5=item.get("skill_5", 0),
            skill_5_stack=item.get("skill_5_stack", 0),
            physical_protection_mob=item.get("physical_protection_mob", 1),
            magical_protection_mob=item.get("magical_protection_mob", 1),
        )
        return user


@dataclass
class MobCombat:
    id: int = 0
    name_mob: str = ""
    vid_mob: str = ""
    lvl_mob: int = 0
    attack_mob: int = 0
    nhp_mob: int = 0
    hp_mob: int = 0
    def_player: int = 0

    @property
    def damage(self):
        self.dmg = randint(
            int(self.attack_mob * 0.8 * ((100 - self.def_player) / 100)),
            int(self.attack_mob * 1.2 * ((100 - self.def_player) / 100)),
        )
        return f"üó°–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –Ω–∞–Ω–µ—Å {self.dmg} —É—Ä–æ–Ω–∞"


def mob_battle(uid):
    """–í—ã–≥—Ä—É–∑–∫–∞ —Ç–∞–±–ª–∏—Ü—ã –±–æ–π –∏–∑ –ë–î –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞"""
    for item in bd.battle(uid):
        mob = MobCombat(
            name_mob=item.get("name_mob", "–ú–æ–±"),
            vid_mob=item.get("vid_mob", "–í–∏–¥ –ú–æ–±–∞"),
            lvl_mob=item.get("lvl_mob", 1),
            attack_mob=item.get("attack_mob", 1),
            nhp_mob=item.get("nhp_mob", 1),
            hp_mob=item.get("hp_mob", 1),
            def_player=item.get("def_player", 1),
        )
        return mob


@dataclass
class CombatSkill:
    skill_icon: str = ""
    skill_name: str = ""
    skill_picture: str = ""
    skill_cost: int = 0
    skill_coefficient: int = 1
    cooldown_skill: int = 0
    skill_damage_type: int = 0
    button_text: str = ""
    skill_number: int = 0
    addiction: int = 0

    def as_button(self) -> str:
        return f"{self.skill_icon}{self.button_text}({self.skill_cost})"


insidious_blow = CombatSkill(
    skill_icon="üó°",
    skill_name="–ö–æ–≤–∞—Ä–Ω—ã–π —É–¥–∞—Ä",
    skill_picture="Fenrial_TG/spells/jJ-SsZhfOqU.jpg",
    skill_cost=7,
    skill_coefficient=3,
    cooldown_skill=0,
    skill_damage_type=0,
    button_text="–ö–£",
    skill_number=1,
    addiction=0,
)

gutting = CombatSkill(
    skill_icon="‚öîÔ∏è",
    skill_name="–ü–æ—Ç—Ä–æ—à–µ–Ω–∏–µ",
    skill_picture="Fenrial_TG/spells/jJ-SsZhfOqU.jpg",
    skill_cost=12,
    skill_coefficient=5,
    cooldown_skill=0,
    skill_damage_type=0,
    button_text="–ü—Ç—Ä",
    skill_number=2,
    addiction=1,
)

strong_beat = CombatSkill(
    skill_icon="‚úäüèª",
    skill_name="–ú–æ—â–Ω—ã–π —É–¥–∞—Ä",
    skill_picture="Fenrial_TG/spells/jJ-SsZhfOqU.jpg",
    skill_cost=20,
    skill_coefficient=2,
    cooldown_skill=0,
    skill_damage_type=0,
    button_text="–ú–£",
    skill_number=2,
    addiction=10,
)

ademis = user_battle(5499224283)
mob = mob_battle(5499224283)



skill_player = insidious_blow
print(ademis.damage(skill_player))
print(skill_player.skill_icon,skill_player.skill_name)
print(skill_player.skill_picture)


@dataclass
class Effects:
    skill_icon: str = ""
    skill_name: str = ""
    skill_picture: str = ""
    skill_cost: int = 0
    skill_coefficient: int = 1
    cooldown_skill: int = 0
    effects_type: int = 0
    ###1-–∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ, 2-—Å–Ω–∏–∂–µ–Ω–∏–µ –∞—Ç–∞–∫–∏, 3-—Å–Ω–∏–∂–µ–Ω–∏–µ –±—Ä–æ–Ω–∏, 4-—â–∏—Ç —Å —á–∞—Å—Ç–∏—á–Ω—ã–º –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ–º, 5-–∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–Ω–∞(—Å–∫–∞—á–æ–∫, –æ—Å–ª–µ–ø–ª–µ–Ω–∏–µ...), 6-–ø–æ–≤—ã—à–µ–Ω–∏–µ –∞—Ç–∞–∫–∏###
    button_text: str = ""
    skill_number: int = 0
    lasting: int = 0
    ###–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ö–æ–¥–æ–≤###

    def as_button(self) -> str:
        return f"{self.skill_icon}{self.button_text}({self.skill_cost})"

    def action_check(self, player):
        player.move_index


#            id
#            class_player
#            nhp
#            status
#            move_index

#            hp
#            mp

#            def_player
#            evasion
#            attack_player
#            intellect

#            cooldown_potion

#            attack_player_stack
#            skill_1
#            skill_1_stack
#            skill_2
#            skill_2_stack
#            skill_3
#            skill_3_stack
#            skill_4
#            skill_4_stack
#            skill_5
#            skill_5_stack

#            name_mob
#            vid_mob
#            lvl_mob
#            attack_mob
#            nhp_mob
#            hp_mob
#            physical_protection_mob
#            magical_protection_mob


#            bleeding
#            attack_reduction
#            attack_boost

